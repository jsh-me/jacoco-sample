plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'jacoco'
}


task jacocoTestReport(type: JacocoReport, dependsOn: ["testDebugUnitTest"]) {

    def reportDirPath = "$buildDir/reports/codeCoverage"

    reports {
        html.enabled true
        xml.enabled true

        html.destination file("$reportDirPath/${project.name}")
        xml.destination file("$reportDirPath/${project.name}.xml")
    }

    def javaClassDirPath = "$project.buildDir/intermediates/javac/debug/classes"
    def kotlinClassDirPath = "$project.buildDir/tmp/kotlin-classes/debug"
    def coverageExecutionDataPath = "${buildDir}/jacoco/testDebugUnitTest.exec"

    def mainJavaSrcPath = "$project.projectDir/src/main/java"
    def mainKotlinSrcPath = "$project.projectDir/src/main/kotlin"

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', 'android/**/*.*']

    sourceDirectories.from = files([mainJavaSrcPath, mainKotlinSrcPath])
    classDirectories.from = fileTree(
            dir: javaClassDirPath,
            excludes: fileFilter
    ) + fileTree(
            dir: kotlinClassDirPath,
            excludes: fileFilter
    )
    executionData.from = file(coverageExecutionDataPath)
}

tasks.all { task ->
    if (task.name == "testDebugUnitTest") {
        task.finalizedBy jacocoTestReport
    }
}


android {
    compileSdk 32

    defaultConfig {
        applicationId "com.jshme.jacocosample"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
}
